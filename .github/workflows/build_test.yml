name: build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-v3-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install poetry
        poetry install --all-extras
        which python
        echo "POETRY_VENV=$(poetry env info --path)" >> $GITHUB_ENV
    - name: Upload Poetry environment
      uses: actions/upload-artifact@v2
      with:
        name: poetry-env
        path: ${{ env.POETRY_VENV }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
    - name: Download Poetry environment
      uses: actions/download-artifact@v2
      with:
        name: poetry-env
        path: ./venv
    - name: Test with pytest
      run: |
        source ./venv/bin/activate
        pytest